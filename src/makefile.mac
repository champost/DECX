RM := rm -rf

CC = g++-fsf-4.9
#CC = g++
#CC = icpc

CPP_SRCS += \
./AncSplit.cpp \
./InputReader.cpp \
./BioGeoTree.cpp \
./BioGeoTreeTools.cpp \
./BranchSegment.cpp \
./OptimizeBioGeo.cpp \
./RateMatrixUtils.cpp \
./RateModel.cpp \
./Utils.cpp \
./node.cpp \
./tree.cpp \
./tree_reader.cpp \
./tree_utils.cpp \
./superdouble.cpp \
./main.cpp

OBJS += \
./AncSplit.o \
./InputReader.o \
./BioGeoTree.o \
./BioGeoTreeTools.o \
./BranchSegment.o \
./OptimizeBioGeo.o \
./RateMatrixUtils.o \
./RateModel.o \
./Utils.o \
./node.o \
./tree.o \
./tree_reader.o \
./tree_utils.o \
./superdouble.o \
./main.o

CPP_DEPS += \
./AncSplit.d \
./InputReader.d \
./BioGeoTree.d \
./BioGeoTreeTools.d \
./BranchSegment.d \
./OptimizeBioGeo.d \
./RateMatrixUtils.d \
./RateModel.d \
./Utils.d \
./node.d \
./tree.d \
./tree_reader.d \
./tree_utils.d \
./superdouble.d \
./main.d

# uncomment if debugging
# DEBUG = -DDEBUG

TARGET_NAME = lagrange_cpp
#for cleaning use -Weffc++
#for openmp -fopenmp
#C_OPT = -O0 -ftree-vectorize -ffast-math -g3 -fopenmp
#C_OPT = -Wall -g
#C_OPT = -g -pg
C_OPT = -O3 $(debug)


#if using octave
#INCLUDES = -I/usr/include/octave-3.0.5/octave/
#INCLUDES = -I/usr/include/octave-3.2.4/
#INCLUDES = -I/sw/opt/boost-1_55/include/ -I/sw/opt/boost-1_55/include/boost/ -I/sw/include/gsl/
INCLUDES = -I ../deps/ -I/sw/include/gsl/


# requires fortran, gsl, and pthread -- and -ldl -lutil -lpython2.6 are for python
#-ldl -lutil -lpython2.6
# if llapack lblas fail, try larmadillo
#LIBS := -llapack -lblas -lgfortran -lgsl -lgslcblas -lm -lpthread -lnlopt -fopenmp -larmadillo
LIBS := -lgfortran -lquadmath -lm -lgsl -lgslcblas
#-larmadillo 


#######
# FORTRAN BIT
######
#FC	= /usr/local/bin/gfortran
FC	= gfortran-fsf-4.9
FFLAGS	= -O3 $(debug)
#.f.o:;  $(FC) $(FFLAGS) -c $<

# Each subdirectory must supply rules for building sources it contributes
%.o: ./%.f
	$(FC) $(FFLAGS) -c $<

FORT_OBJS += \
./clock.o \
./my_expokit.o \
./mataid.o \
./blas.o \
./lapack.o \
./my_matexp.o


# Each subdirectory must supply rules for building sources it contributes
%.o: ./%.cpp
#	$(CC) $(DEBUG) $(INCLUDES) $(C_OPT) -c -fmessage-length=0 -MMD -MP -MF"$(@:%.o=%.d)" -MT"$(@:%.o=%.d)" -o "$@" "$<"
#	$(CC) -O3 -fpic -pipe -g -pg -c -o "$@" "$<"
	$(CC) $(INCLUDES) $(C_OPT) -c -o "$@" "$<"


# link library locations
# LINK_LIB_DIRS = -L/usr/lib/ -L/usr/local/lib/ -L/sw/opt/boost-1_55/lib/boost-1_55/libs/ -L/sw/lib/gcc4.9/lib
#LINK_LIB_DIRS = -L/sw/opt/boost-1_55/lib/boost-1_55/libs/ -L/sw/lib/gcc4.9/lib -L/sw/lib/
LINK_LIB_DIRS = -L/sw/lib/gcc4.9/lib -L/sw/lib/

# Tool invocations
lagrange_cpp: $(OBJS) $(FORT_OBJS)
	@echo 'Building target: $@'
#	$(CC) $(static) $(LINK_LIB_DIRS) $(PYTHON_REQ) -o "$(TARGET_NAME)" $(FORT_OBJS) $(OBJS) $(LIBS)
	$(CC) $(static) $(debug) $(LINK_LIB_DIRS) -o "$(TARGET_NAME)" $(FORT_OBJS) $(OBJS) $(LIBS)
#	$(CC) $(LINK_LIB_DIRS) -g -pg -o "$(TARGET_NAME)" $(FORT_OBJS) $(OBJS) $(LIBS)
	@echo 'Finished building target: $(TARGET_NAME)'
	@echo ' '

#oct: $(OBJS) $(FORT_OBJS)
#	@echo 'Building target: $@'
#	mkoctfile --link-stand-alone $(LINK_LIB_DIRS) -o "$(TARGET_NAME)" $(FORT_OBJS) $(OBJS) $(LIBS)
#	@echo 'Finished building target: $(TARGET_NAME)'
#	@echo ' '
 

# All Target
all: lagrange_cpp

static: static=-static#-libgcc -static-libstdc++
static: all

debug: debug=-g
debug: all

debugstatic: debug=-g
debugstatic: static=-static
debugstatic: all

mac: CC=g++-mp-4.8
mac: all

# Other Targets
clean:
	-$(RM) *.o *.d $(TARGET_NAME)
	-@echo ' '
